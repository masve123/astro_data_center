---
// MachineLearningSolution.astro
import Button from "./Button.astro";
import Container from "./Container.astro";
---

<Container>
  <div class="machine-learning-solution relative dark:bg-darker overflow-hidden" id="machine-learning-solution">
    <div class="container mx-auto flex flex-col lg:flex-row items-center justify-between text-center lg:text-left gap-12 py-20 px-4">
      <!-- Visual Element - Styling Block -->
       <!-- Styling Block -->
       <div class="w-full lg:w-1/2 flex justify-center lg:justify-start items-center">
        <div class="style-container relative w-3/4 h-auto">
          <!-- Fancy CSS Styling Placeholder -->
          <div class="fancy-css-styling relative">
            <!-- Similar Animated SVG Graphic -->
            <svg viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg" class="svg-graphic">
              <path fill="none" stroke="url(#gradient1)" stroke-width="4" 
                d="M 50, 100 a 50,50 0 1,0 100,0 a 50,50 0 1,0 -100,0 "
                class="path-animation">
              </path>
              <path fill="none" stroke="url(#gradient2)" stroke-width="4" 
                d="M 60, 100 a 40,40 0 1,0 80,0 a 40,40 0 1,0 -80,0 "
                class="path-animation" style="animation-delay: -5s;">
              </path>
              <defs>
                <linearGradient id="gradient1" gradientTransform="rotate(90)">
                  <stop offset="0%" stop-color="#4b6cb7"/>
                  <stop offset="100%" stop-color="#182848"/>
                </linearGradient>
                <linearGradient id="gradient2" gradientTransform="rotate(45)">
                  <stop offset="0%" stop-color="#ff9a9e"/>
                  <stop offset="100%" stop-color="#fad0c4"/>
                </linearGradient>
              </defs>
            </svg>
          </div>
        </div>
      </div>
      <!-- Text Content -->
      <div class="w-full lg:w-1/2">
        <h2 class="text-4xl sm:text-5xl md:text-6xl font-bold text-gray-900 dark:text-white leading-tight">
          Machine Learning Solutions
        </h2>
        <p class="mt-8 text-lg text-gray-700 dark:text-gray-100 animate-float" style="animation-delay: 0.1s;">
          Our machine learning platform is engineered for <strong>fast spin-up times</strong>, <strong>bare metal performance</strong>, and <strong>scalable distributed training clusters</strong>, enabling rapid model development and deployment.
        </p>
        <div class="mt-10 flex flex-col sm:flex-row justify-center lg:justify-start gap-4">
            <a href="#get-started" class="bg-white border border-gray-300 rounded-md px-8 py-4 text-lg text-gray-800 font-medium hover:bg-gray-50 hover:shadow-md transition-all dark:bg-gray-100 dark:border-gray-100 dark:text-black dark:hover:bg-gray-200">
                Launch Instance &rarr;
            </a>
        </div>
      </div>
    </div>
  </div>
</Container>



<style>
  /* General styling for the SVG container */
  .svg-container {
    width: 300px;
    height: 300px;
    display: flex; /* Ensures container uses flex layout */
    justify-content: center; /* Center items horizontally */
    align-items: center; /* Center items vertically */
    margin: 0 auto; /* Center the container itself if within a flex parent */
  }

  /* Styling for the SVG graphic to ensure it fills the container but maintains aspect ratio */
  .svg-graphic {
    width: 100%; /* Fill the container width */
    height: auto; /* Maintain aspect ratio */
  }

  /* Animation for the path within the SVG to rotate */
  .path-animation {
    animation: rotate-animation 20s linear infinite;
  }

  /* Keyframes for rotation animation */
  @keyframes rotate-animation {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  /* Media query to hide the SVG container on screens smaller than 768px */
  @media (max-width: 768px) {
    .svg-container {
      display: none !important; /* Force hiding the SVG container */
    }
  }
</style>



<style>
    /* Animation keyframes text */
    @keyframes float {
        0% {
            opacity: 0;
            transform: translate3d(0, 100%, 0);
        }
        100% {
            opacity: 1;
            transform: none;
        }
    }

    /* Apply animation to elements */
    .animate-float {
        animation: float 2s ease-out forwards;
    }

    /* Base hero section styles */
    .hero-section {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        padding: 4rem 1rem;
    }
</style>
